BGREEN="\[\033[1;32m\]"
GREEN="\[\033[0;32m\]"
NO_COLOUR="\[\033[0m\]"
RED="\[\033[0;31m\]"
YELLOW="\[\033[0;33m\]"

function parse_git_branch () {
    branch=$(git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)/')
    if [[ $branch == \(cl* ]];
        then
        reviewId=`echo ${branch:3:8}`
        echo -n "http://crrev.com/$reviewId "
    fi
    if [ "$branch" = "(master)" -o "$branch" = "(trunk)" ];
        then
        tput setb 4
        tput smul
        tput bold
    fi
    echo $branch
}

function show_status_bubble() {
    terminal_status_bubble=""
    if [[ "$GYP_DEFINES" =~ "OS=android" ]]
    then
        if [[ $PWD =~ ^$CHROME_SRC.* ]]
        then
            terminal_status_bubble="android"
        fi
    else
        terminal_status_bubble="linux"
    fi
    if [[ "$GYP_DEFINES" =~ "fastbuild=2" ]]; then
        terminal_status_bubble="$terminal_status_bubble fastbuild@2"
    fi
    if [[ "$GYP_DEFINES" =~ "clang=1" ]]
    then
        terminal_status_bubble="$terminal_status_bubble clang"
    else
        terminal_status_bubble="$terminal_status_bubble gcc"
    fi
    array=(${terminal_status_bubble})
    length=${#array[@]}
    for i in "${!array[@]}"
    do
        tput setaf 7
        tput setab 4
        echo -n "${array[i]}"
        tput sgr0
        if [[ $i == $((length-1)) ]]
        then
            echo -n ""
        else
            echo -n " "
        fi
    done
}

PS1="$GREEN\u@\h: $YELLOW\w $BGREEN\$(parse_git_branch)$NO_COLOUR \$(show_status_bubble)$GREEN \$(date +\"%d:%m:%y %T.%3N\")$NO_COLOUR\n\$ "
